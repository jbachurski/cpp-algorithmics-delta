e = 3
n1 = 129721137483005394067404022614934792895865464263015548617695406921688468397252110243587287266332787821102432508483381192537410907133383413811462322833958735921683278228772952781772332153197896254285246023760824333484033919348811391165775213266448742093093672798508227907597912321807219471802389970787199699101
c1 = 8465218392018481765151587448068619850753175449226072737644659235653748450772303036339522584603544043494444928080176800021319122803199971234173108043945090383983712713019869860934115723037534427928405033501657269052625239280371457544371900699810882053382195008102847664235250384793080225885634231731199108734
n2 = 125864135655064173411302662287132248463708247355644156911647309630590507342291152923147647596204927124241199005793971052844872646746328899364546517837176299213885483505166900402492285781308663493436966360056613158146950076141871824957739329774235091828600064481235221309111610850839323388298146938709018071499
c2 = 107431148384767327824156788768519720359368455505480429441715895722867032856955621324181653423129713442938325939317299130745923403813502092655487599582973074006277842007326231914413188546436166732268740702741920477330258314990993974608208626132584474010697314437746053852388361153497195054361122770717872199713
n3 = 120937737292536723375476371042988044047986711931722453253520656292638524361044586103449046062122565131047195830427415648888870750673158559694445730202526669220956012215153004332652873081108491573308989389336273220230926129930636304604312532708240691160572707381826801645627476235537091958841345670148788006521
c3 = 111120358140416767478926325278173839515526827216956645869844923566124323613316595690764261704567798465786766288493174008336120440839151876598660804433298300761031171835428183074941062019245708032088961675785026515641302854184012812095865878747102155208496078611303801126816255952776942791372120019666064001355
from sympy import solve_congruence
from sympy.ntheory.modular import solve_congruence
solve_congruence((n1, c1), (n2, c2), (n3, c3))
solve_congruence((c1, n1), (c2, n2), (c3, n3))
c, n = solve_congruence((c1, n1), (c2, n2), (c3, n3))
c
n
cbrt(c)
def icbrt(n):
    return partition_point(lambda x: x*x*x > n, 0, n+1) - 1
def part
def icbrt(n):
    return partition_point(lambda x: x*x*x > n, 0, n+1) - 1
def partition_point(f, lo, hi):
    while lo < hi:
        mid = (lo + hi) // 2
        if f(mid):
            hi = mid
        else:
            lo = mid+1
    return lo
icbrt(c)
icbrt(c)**3 - c
t = icbrt(c)
bytes.from_int
t.to_bytes
t.to_bytes(256)
t.to_bytes(256, 'little')
ls
cd Desktop/
cd wwi/
mkdir CTF
cd CTF/
%save rsa
%history -f rsa.py
