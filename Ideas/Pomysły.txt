1. Z³ota skrzynia 
Dla prostopad³oœciennej tablicy liczb [w][h][d], 
znajdŸ szeœciañ o boku k o maksymalnej sumie liczb,
które siê w nim zawieraj¹.
[analogia do problemu maksymalnego prostok¹ta w dwuwymiarowej tablicy,
 czy maksymalnego spójnego podci¹gu (w tym wypadku maksymalnego o d³ugoœci k]

w, h, d <= 128, k <= min(w, h, d)
-1000 <= a[x,y,z] <= 1000

Wejœcie:
{w} {h} {d} {k}
d razy:
  h razy:
     w razy:
       {liczba spe³niaj¹ca a[x,y,z]} spacja
     nowa linia
  nowa linia

Wyjœcie:
{maksymalna suma}
{x} {y} {z} # indeksy pocz¹tku szeœcianu
            # x, y, z oznacza szeœcian opisany indeksami {x, y, z, x+k-1, y+k-1, z+k-1}
  
--- === ---

2. Magiczne schody
Mamy opis m magicznych schodów w wie¿y o n piêtrach.
[Piêtra s¹ numerowane od 0 - parter, do n-1 - szczytu wie¿y]
[Czas mierzymy w chwilach, gdzie chwile s¹ numerowane od 0 - pocz¹tku podró¿y po wie¿y]
Magiczne schody za pomoc¹ staro¿ytnych czarów s¹ w stanie teleportowaæ
u¿ytkownika z jednego punktu do drugiego. Teleportacja trwa jedn¹ chwilê.
Opisuje siê je trzema wartoœciami t_i, a_i, b_i - opowiednio numer
chwili w którym odbywa siê teleportacja, punkt pocz¹tkowy teleportacji
i punkt koñcowy teleportacji.
Nie mo¿na podró¿owaæ magicznymi schodami w drug¹ stronê. Ruch jest jednostronny. 
(tylko a_i do b_i, nie b_i do a_i). Mo¿e siê zdarzyæ ¿e a_i > b_i.
Dodatkowo, istniej¹ schody klasyczne, którymi mo¿na przejœæ jedno piêtro *w górê*
w jedn¹ chwilê.

Dla danego zbioru magicznych schodów chcemy dowiedzieæ siê ile (najkrócej)
potrwa podró¿ do ka¿dego z piêter, do których mo¿emy dotrzeæ z parteru (piêtra 0).

n, m <= 10**6
0 <= t_i < 10**9
0 <= a_i, b_i < n, a_i != b_i

Wejœcie:
{n} {m}
m razy:
  {t_i} {a_i} {b_i}
  
Wyjœcie:
n razy:
  numer chwili w której mo¿emy dotrzeæ do i-tego piêtra (dla parteru numer chwili to 0)
  
  
--- === ---

3. ??
Dla n elementów ci¹gu mamy q zapytañ:
1. Ustawiamy [na przedziale?] element na dan¹ liczbê
2. Pytamy czy na przedziale a..b wszystkie elementy s¹ kolejno o k wiêksze

5 4
= 1 1
= 2 2
= 3 3 // ci¹g 1, 2, 3
? 1 3 1 -> TAK // 1, 2, 3: elementy rosn¹ o 1


3.2 Piramidy
Dla n elementów ci¹gu mamy q zapytañ:
1. Dodajemy na przedziale a..b liczbê
2. Pytamy czy na przedziale a..b liczby tworz¹ postêp arytmetyczny (a, a+x, a+2x, a+3x..)


--- === ---

Zajêcia o C++:
* assert, abort, system
* fstream
* template
* iteratory: binary search, rbegin/rend
* STL: std::list, std::deque
* operator strza³eczki - i --> 0
* litera³y - 0ULL
* builtins gcc/g++: 
    __gcd, __builtin_popcount, __builtin_clz[ll], __builtin_ctz[ll]    
    
    
--- === ---

4. Bity
 * Operacje bitowe na przedzia³ach
 * Suma na przedziale
 
Model: drzewa przedzia³owe dla ka¿dego bitu

--- === ---

5. Drzewo na drzewie

Mamy dany graf - drzewo z n wierzcho³kami (n <= 10^5). Mamy podane n - 1 krawêdzi.
Chcemy pokolorowaæ wierzcho³ki, tak ¿e kolorowanie ma najwiêksz¹ sumê wartoœci kolorów.
Kolor to liczba ca³kowita dodatnia.
Wartoœæ koloru k to 
    2^k % 169831
(notatka: cykl modulo ma d³ugoœæ 333)
Gdy wykorzystujemy dany kolor k, s¹siednie wierzcho³ki musz¹ mieæ kolor 
maksymalnie ró¿ni¹cy siê o 
    min(abs((k % 333) - 111), abs((k % 333) - 222))
Wynik to maksymalna suma kolorowania.


Model:
* Ukorzenienie
* Dynamik, stan dynamika dla poddrzewa z wierzcho³kiem u to DP[u][k], gdzie k to wykorzystany kolor dla u
* Mo¿liwe kolory to, po ograniczeniu, 0..332 (niech C = 332)
    * Drzewa Fenwicka zbudowane dla ka¿dego DP[u]
* Z³o¿onoœæ: O(n + n * C)
    * bez Fenwicka: O(n + n * C * C/3), czyli 10^5 * 333 * 111 ~=\/ 3e9 
    * Teoretycznie da siê to zrobiæ bez Fenwicka, ale powinno byæ bardzo trudno 
      (kolejka monotoniczna? drzewo przedzia³owe daje mno¿nik ~x10 i spora sta³¹)